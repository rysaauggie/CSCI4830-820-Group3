{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James\\\\Desktop\\\\CSCI4830-820-Group3\\\\src\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Container, Nav, Form, Row, Col, Button, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport FlightCard from './flightCard';\nimport { supabase } from './supabaseClient';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\n//YbuNRL9dMSQzMed1\n\n// Create the user interface (Navbar, Form to create products, product card)\n// Setup, create table for our products\n// Implement the CRUD logic for products\n\n// Resume video https://www.youtube.com/watch?v=4yVSwHO5QHU @ 14:22\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [startloc, setStartloc] = useState(\"\");\n  const [endloc, setEndloc] = useState(\"\");\n  const [passengers, setPassengers] = useState(\"\");\n  const [flights, setFlights] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [startdate, setStartDate] = useState();\n  const [enddate, setEndDate] = useState();\n  const options = [{\n    label: \"One Way\",\n    value: \"One Way\"\n  }, {\n    label: \"Round Trip\",\n    value: \"Round Trip\"\n  }];\n  console.log(startloc);\n  console.log(endloc);\n  console.log(passengers);\n  {/* Use Effect hook ensures the code runs automatically, this code displays ALL flights in the database\n   useEffect(() => {\n    getFlights();\n   }, [])\n   */}\n  useEffect(() => {\n    showRandomFlight();\n  }, []);\n  async function getFlights() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"flights\").select(\"*\");\n      //.limit(10)\n      if (error) throw error;\n      if (data != null) {\n        setFlights(data);\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n  async function getFlightCount() {\n    try {\n      const {\n        count,\n        error\n      } = await supabase.from(\"flights\").select(\"*\", {\n        count: \"exact\",\n        head: true\n      });\n      if (error) throw error;\n      return count;\n    } catch (error) {\n      alert(error.message);\n      return 0;\n    }\n  }\n  async function showRandomFlight() {\n    const count = await getFlightCount();\n    if (count === 0) {\n      alert(\"No Flight Available\");\n      return;\n    }\n    const randomId = Math.floor(Math.random() * count) + 1;\n    await getFlightsById(randomId);\n  }\n  async function getFlightsById(id) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"flights\").select(\"*\").eq(\"id\", id).single(); // ensures a single result\n      if (error) throw error;\n      if (data != null) {\n        setFlights([data]);\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n  async function createFlight() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"flights\").insert({\n        // Content to the left of the : is the name of colum in DB\n        // Content to the right of the : is the name of the const variable above\n        startloc: startloc,\n        endloc: endloc,\n        passengers: passengers,\n        type: value,\n        startday: startdate,\n        endday: enddate\n      }).single();\n      if (error) throw error;\n      window.location.reload();\n    } catch (error) {\n      alert(error.message);\n    }\n  }\n  console.log(flights);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"Flight Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: \"Created by James\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Flight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        lg: 3,\n        className: \"g-4\",\n        children: flights.map(flight => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(FlightCard, {\n            flight: flight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, flight.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"b9jcj3ZCSaEm92l7iqsR+Gy0B1A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Navbar","Container","Nav","Form","Row","Col","Button","Dropdown","DropdownButton","useState","useEffect","FlightCard","supabase","InputGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","startloc","setStartloc","endloc","setEndloc","passengers","setPassengers","flights","setFlights","value","setValue","startdate","setStartDate","enddate","setEndDate","options","label","console","log","showRandomFlight","getFlights","data","error","from","select","alert","message","getFlightCount","count","head","randomId","Math","floor","random","getFlightsById","id","eq","single","createFlight","insert","type","startday","endday","window","location","reload","children","Brand","fileName","_jsxFileName","lineNumber","columnNumber","Item","xs","lg","className","map","flight","_c","$RefreshReg$"],"sources":["C:/Users/James/Desktop/CSCI4830-820-Group3/src/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Container, Nav, Form, Row, Col, Button, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport FlightCard from './flightCard';\nimport { supabase } from './supabaseClient';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\n//YbuNRL9dMSQzMed1\n\n// Create the user interface (Navbar, Form to create products, product card)\n// Setup, create table for our products\n// Implement the CRUD logic for products\n\n// Resume video https://www.youtube.com/watch?v=4yVSwHO5QHU @ 14:22\n\nfunction App() {\n  const [ startloc, setStartloc ] = useState(\"\");\n  const [ endloc, setEndloc] = useState(\"\");\n  const [ passengers, setPassengers] = useState(\"\");\n  const [ flights, setFlights ] = useState([]);\n  const [ value, setValue ] = useState(\"\");\n  const [ startdate, setStartDate ] = useState();\n  const [ enddate, setEndDate ] = useState();\n  const options = [\n    {label: \"One Way\", value: \"One Way\"},\n    {label: \"Round Trip\", value: \"Round Trip\"}\n  ]\n\n  console.log(startloc);\n  console.log(endloc);\n  console.log(passengers);\n  {/* Use Effect hook ensures the code runs automatically, this code displays ALL flights in the database\n  useEffect(() => {\n    getFlights();\n  }, [])\n  */}\n\n  useEffect(() => {\n    showRandomFlight();\n  }, [])\n  \n  \n  async function getFlights(){\n    try{\n      const {data, error } = await supabase\n        .from(\"flights\")\n        .select(\"*\")\n        //.limit(10)\n      if (error) throw error;\n      if (data != null){\n        setFlights(data);\n      }\n    }catch (error){\n      alert(error.message);\n    }\n  }\n\n  async function getFlightCount(){\n    try{\n      const { count, error } = await supabase\n      .from(\"flights\")\n      .select(\"*\", {count: \"exact\", head: true});\n\n      if (error) throw error;\n\n      return count;\n    }catch (error){\n      alert(error.message);\n      return 0;\n    }\n  }\n\n  async function showRandomFlight(){\n    const count = await getFlightCount();\n\n    if (count === 0){\n      alert(\"No Flight Available\");\n      return;\n    }\n\n    const randomId = Math.floor(Math.random() * count) + 1;\n    await getFlightsById(randomId);\n  }\n\n  async function getFlightsById(id){\n    try{\n      const {data, error } = await supabase\n      .from(\"flights\")\n      .select(\"*\")\n      .eq(\"id\", id)\n      .single(); // ensures a single result\n      if (error) throw error;\n      if (data != null){\n        setFlights([data]);\n      }\n    }catch (error){\n      alert(error.message);\n    }\n  }\n\n  async function createFlight() {\n    try{\n      const { data, error } = await supabase\n        .from(\"flights\")\n        .insert({\n          // Content to the left of the : is the name of colum in DB\n          // Content to the right of the : is the name of the const variable above\n          startloc: startloc,\n          endloc: endloc,\n          passengers: passengers,\n          type: value,\n          startday: startdate,\n          endday: enddate\n        })\n        .single()\n\n      if (error) throw error;\n      window.location.reload();\n    }catch (error){\n      alert(error.message);\n    }\n  }\n\n  console.log(flights);\n\n  return (\n    <>\n      \n      <Navbar>\n        <Container>\n          <Navbar.Brand>Flight Tracker</Navbar.Brand>\n          <Nav>\n            <Nav.Item>Created by James</Nav.Item>\n          </Nav>\n        </Container>\n      </Navbar>\n      \n      <Container>\n        {/*<Row>\n          <Col xs={12} md={8}>\n            <h3>Create Flight</h3>\n            <Form.Label>Start Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"startloc\"\n              onChange={(e)=> setStartloc(e.target.value)}\n            />\n            <Form.Label>End Location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              id=\"endloc\"\n              onChange={(e)=> setEndloc(e.target.value)}\n            />\n            <Form.Label># of Passengers</Form.Label>\n            <Form.Control\n              type=\"int\"\n              id=\"passengers\"\n              onChange={(e) => setPassengers(e.target.value)}\n            />\n            <Form.Label>Flight Type</Form.Label>\n            <Form.Select className=\"form-select\" id=\"type\" onChange={(e) => setValue(e.target.value)}>\n              {options.map(option => (\n                <option value={option.value}>{option.label}</option>\n              ))}\n            </Form.Select>\n            <Form.Label>Start Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              id=\"startdate\"\n              onChange={(e) => setStartDate(e.target.value)}\n            />\n            <Form.Label>End Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              id=\"enddate\"\n              onChange={(e) => setEndDate(e.target.value)}\n            />\n            <br></br>\n            <Button onClick={() => createFlight()}>Create Flight Information</Button>\n\n          </Col>\n        </Row>*/}\n        \n        <h3>Your Flight</h3>\n        <Row xs={1} lg={3} className=\"g-4\">\n          {flights.map((flight) => (\n            <Col key={flight.id}>\n              <FlightCard flight={flight} />\n            </Col>\n          ))}\n        </Row>\n      </Container>  \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}